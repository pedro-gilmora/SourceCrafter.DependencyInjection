name: 'SourceCrafter.DependencyInjection: Build, Test & Deploy for .NET 8'

on:
  push:
    branches: [ "**" ]

jobs:
  try-deliver:
    name: '.NET 8 Build, Test & Deploy'
    runs-on: 'ubuntu-latest'

    steps:      
    - name: Get source code
      uses: actions/checkout@v3
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x

    - name: Restore, Package and Test
      shell: pwsh
      run: .\Package.ps1 -clean false -test true
      
    - name: Publish generator and endpoints to Nuget
      if: github.ref_name == 'dev'
      run: |
        package="$(find . -wholename '**/packaging/SourceCrafter.DependencyInjection.*.nupkg' | grep -E 'SourceCrafter.DependencyInjection.[0-9\.]+.nupkg')"
        dotnet nuget push $package --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
        package="$(find . -wholename '**/Pack/SourceCrafter.DependencyInjection.Interop*.nupkg' -exec echo "{}" \;)"
        dotnet nuget push $package --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
        package="$(find . -wholename '**/Pack/SourceCrafter.DependencyInjection.MsConfiguration*.nupkg' -exec echo "{}" \;)"
        dotnet nuget push $package --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
        package="$(find . -wholename '**/Pack/SourceCrafter.DependencyInjection.MsConfiguration.Metadata*.nupkg' -exec echo "{}" \;)"
        dotnet nuget push $package --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
