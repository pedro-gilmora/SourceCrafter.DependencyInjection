name: 'SourceCrafter.DependencyInjection: Build, Test & Deploy for .NET 8'

on:
  push:
    branches: [ "**" ]

jobs:
  try-deliver:
    name: '.NET 8 Build, Test & Deploy'
    runs-on: 'ubuntu-latest'

    steps:      
    - name: Get source code
      uses: actions/checkout@v3
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 9.0.x

    - name: Restore, Package and Test
      shell: pwsh
      run: .\Package.ps1 -clean false -test true
      
    - name: Publish generator and endpoints to Nuget
      if: github.ref_name == 'dev'
      run: |        
        for package in $(find . -wholename '**/packaging/*.nupkg'); do
          # Execute nuget push for each package
          dotnet nuget push $package --api-key ${{ secrets.NUGET_API_KEY }} --source "https://api.nuget.org/v3/index.json"
        done

    - name: Notify Telegram
      if: always()
      shell: pwsh      
      run: |
        $status = if ('${{ job.status }}' -eq 'failure') { 'failed' } else { 'successfully completed' }
        $icon = if ('${{ job.status }}' -eq 'failure') { 'â›”' } else { 'âœ…' }
        $message = @"
        ðŸš€$icon <b>${{ github.workflow }}</b> #${{ github.run_number }} Build $status
        ðŸ‘¤ <b>Triggered by:</b> ${{ github.actor }}
        ðŸŒ¿ <b>Branch:</b> ${{ github.ref }}
        ðŸ”— <b>Commit:</b> [<code>${{ github.sha }}</code>] 
        ${{ github.event.head_commit.message }}
        "@

        $uri = "https://api.telegram.org/bot${{ secrets.TGBOT_TOKEN }}/sendMessage"
        $body = @{
            chat_id = ${{ secrets.SC_CHATID }}
            text    = $message
            parse_mode = 'HTML'
        }

        Invoke-RestMethod -Uri $uri -Method Post -Body $body
